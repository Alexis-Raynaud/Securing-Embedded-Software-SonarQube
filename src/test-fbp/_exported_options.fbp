# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

OPTION=Bool.value:bool-ahoi
OPTION=Int.value:MyInt
OPTION=Float.value:Float
OPTION=String.value:AString
OPTION=Byte.value:Byte
OPTION=DirectionVector.value:Direction

Int(constant/int:value=0) OUT -> IN[0] IntEqual(int/equal) OUT -> RESULT TestInt(test/result)
_(constant/int:value=20) OUT -> IN[1] IntEqual

Float(constant/float:value=0.0) OUT -> IN[0] FloatEqual(float/equal) OUT -> RESULT TestFloat(test/result)
_(constant/float:value=2.4) OUT -> IN[1] FloatEqual

String(constant/string:value=null) OUT -> IN[0] StrEqual(string/compare) EQUAL -> RESULT TestString(test/result)
_(constant/string:value="Soletta is awesome") OUT -> IN[1] StrEqual

Byte(constant/byte:value=0x00) OUT -> IN[0] ByteEqual(byte/equal) OUT -> RESULT TestByte(test/result)
_(constant/byte:value=0x02) OUT -> IN[1] ByteEqual

DirectionVector(constant/direction-vector:value=0|199|22) OUT -> IN ConverterDirection(converter/direction-vector-to-int)

ConverterDirection X -> IN[0] DirXEqual(int/equal) OUT -> RESULT TestDirectionVectorX(test/result)
_(constant/int:value=1) OUT -> IN[1] DirXEqual

ConverterDirection Y -> IN[0] DirYEqual(int/equal) OUT -> RESULT TestDirectionVectorY(test/result)
_(constant/int:value=2) OUT -> IN[1] DirYEqual

ConverterDirection Z -> IN[0] DirZEqual(int/equal) OUT -> RESULT TestDirectionVectorZ(test/result)
_(constant/int:value=3) OUT -> IN[1] DirZEqual

Bool(constant/boolean:value=false) OUT -> RESULT TestBool(test/result)
